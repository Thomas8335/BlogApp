package com.example.myapplication;

import android.content.Context;
import android.content.Intent;

/**
 * Represents the presenter responsible for handling the logic of
 * the BlogDetailActivity.
 * Presenter generated by AI
 */
public class BlogDetailPresenter {

    private View view;

    /**
     * Initializes a new instance of the BlogDetailPresenter.
     * @param view The view to be associated with this presenter.
     */
    public BlogDetailPresenter(View view) {
        this.view = view;
    }

    /**
     * Processes the intent to extract blog details and requests the view to display them.
     *
     * @param intent The intent containing blog details.
     */
    public void displayBlogDetail(Intent intent) {
        String title = intent.getStringExtra("title");
        String body = intent.getStringExtra("body");
        view.displayBlog(title, body);
    }

    /**
     * Handles the selection of items in the navigation menu.
     *
     * @param itemId The ID of the selected navigation item.
     */
    public void handleNavigationItemSelected(int itemId) {
        if (itemId == R.id.nav_home) {
            Intent intent = new Intent((Context) view, MainActivity.class);
            ((Context) view).startActivity(intent);
        } else if (itemId == R.id.nav_add_blog) {
            Intent intent = new Intent((Context) view, CreateBlogActivity.class);
            ((Context) view).startActivity(intent);
        }
    }

    /**
     * Interface representing the view in the Model-View-Presenter pattern.
     * It provides a contract for displaying a blog's details.
     */
    public interface View {
        /**
         * Displays the blog with the given title and body.
         *
         * @param title The title of the blog.
         * @param body The content/body of the blog.
         */
        void displayBlog(String title, String body);
    }
}
